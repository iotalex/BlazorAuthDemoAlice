@page "/"
@page "/login"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Login</h3>
<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" placeholder="Username" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" placeholder="Password" type="password" />
    </div>
    <button type="submit">Login</button>
</EditForm>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

@code {
    private LoginModel loginModel = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var apiUrl = $"{Nav.BaseUri}api/auth/login";
        var response = await Http.PostAsJsonAsync(apiUrl, loginModel);
        if (response.IsSuccessStatusCode)
        {
            Nav.NavigateTo("securepage");
        }
        else
        {
            errorMessage = "Invalid credentials";
        }
    }
}
@* Example credentials for demonstration purposes only. Do not use real passwords in source code. *@
@* Username: alice *@
@* Password: password1 *@

@* Username: bob *@
@* Password: password2 *@